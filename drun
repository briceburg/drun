#!/bin/bash
set -e
set -o pipefail

IMAGE=$1
if [ -z "$IMAGE" ]; then
  echo >&2 "Usage: drun [image] [command]"
  exit 1
fi
shift

if ! docker inspect --format="{{.Id}}" $IMAGE > /dev/null; then
  echo "Pulling $IMAGE image..."
  docker pull $IMAGE
fi

ENV_FILE_OPT=""
if [ -n "$ENVREGEX" ]; then
  ENV_FILE=$(echo ".local-env-$$")
  env | grep '=' | awk -F '=' '{if($1 ~ /'"$ENVREGEX"'/) print}' > $ENV_FILE
  trap "rm $ENV_FILE" EXIT
  ENV_FILE_OPT="--env-file=$ENV_FILE"
fi

RM_OPT=${RM_OPT=--rm}

TTY_OPT=""
if [[ -t 1 ]]; then
  TTY_OPT="-it"
fi

CURRENT_DIR=$(pwd)
CONTAINER_HOME=$CURRENT_DIR

set -x
docker run $RM_OPT $TTY_OPT \
  -v $CURRENT_DIR:$CONTAINER_HOME -e HOME=$CONTAINER_HOME -w $CONTAINER_HOME \
  -v ~/.ssh:$CONTAINER_HOME/.ssh:ro \
  -v ~/.ssh/known_hosts:/root/.ssh/known_hosts:ro \
  --net=host \
  $ENV_FILE_OPT $EXTRA_OPTS \
  $IMAGE "$@"
