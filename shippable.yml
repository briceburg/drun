language: none

build:
  pre_ci_boot:
    image_name: drydock/u16
    image_tag: master
    options: -v /root/src/github.com:/root/src/github.com
  ci:
    - ./drun -x ubuntu:16.04 cat /etc/issue | grep 'Ubuntu 16.04' # should execute command inside container
    - ./drun -x docker:17 docker version # should bind docker.sock
    - ./drun -x docker:17 ls -l drun
    - ./drun -x docker:17 sh -c './drun -x docker:17 true' # should do inception in 2 levels
    - ./drun -x docker:17 sh -c './drun -x docker:17 sh -c "./drun -x docker:17 true"' # should do inception in 3 levels
    - ./drun -x mhart/alpine-node:5.12.0 node --version | grep 'v5.12.0' # should get version of node
    # should read version from package.json
    - echo '{"engines":{"node":"8.14.1"}}' > package.json && ./drun -xNA node --version | grep 'v8.14.1'
    - echo '{"engines":{"node":"~8.14.1"}}' > package.json && ./drun -xNA node --version | grep 'v8.14.1'
    - echo '{"engines":{"node":"^8.14.1"}}' > package.json && ./drun -xNA node --version | grep 'v8.14.1'
    - echo '{"engines":{"node":">=8.14.1"}}' > package.json && ./drun -xNA node --version | grep 'v8.14.1'
    - echo '{"engines":{"node":">= 8.14.1"}}' > package.json && ./drun -xNA node --version | grep 'v8.14.1'
    - echo '{"engines":{"node":"8.14.1"}}' > package.json && ./drun -xNM slim node --version | grep 'v8.14.1' # should read version from package.json node:...-slim image
    - echo '10.16.0' > .nvmrc && ./drun -xNA node --version | grep 'v10.16.0' # should read version from .nvmrc
    - echo '{"test":"passing"}' | ./drun -x stedolan/jq '.test' | grep '"passing"' # should pipe into command inside container
    - echo '{"test":"passing"}' > test.json && ./drun -x stedolan/jq '.test' test.json | grep '"passing"' # should mount current directory
    - ./drun alpine sh -c 'apk update && apk add checkbashisms && checkbashisms -f drun && echo "checkbashisms passed."'
    - ./drun -?
